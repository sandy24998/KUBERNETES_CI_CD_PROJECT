pipeline {
    agent any

    environment {
        // Kubernetes details
        KUBECONFIG = 'var/lib/jenkins/.kube/config'  // Path to the kubeconfig file
        K8S_DEPLOYMENT_NAME = 'node-app-deployment'
        K8S_NAMESPACE = 'default'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm // Jenkins automatically checks out the source code 
            }
        }

        stage('Clean Up') {
    steps {
        withCredentials([usernamePassword(
                    credentialsId: 'DockerHubCred', 
                    usernameVariable: 'DOCKER_USER', 
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                 sh '''
                    docker rmi -f $DOCKER_USER/node-app || true
                    '''
                }
        
    }
}

        stage('Docker Build') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'DockerHubCred', 
                    usernameVariable: 'DOCKER_USER', 
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    // Use the credentials to login and build the image 
                    sh '''
                        docker build -t $DOCKER_USER/node-app:latest .
                    '''
                }
            }
        }
        stage('Push to Dockerhub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'DockerHubCred', 
                    usernameVariable: 'DOCKER_USER', 
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    sh '''
                        docker login -u $DOCKER_USER -p $DOCKER_PASS
                        docker push $DOCKER_USER/node-app:latest
                    '''
                }
            }
        }
        

        stage('Apply Deployment YAML') {
            steps {
                script {
                    // Apply the deployment YAML file to the cluster
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_FILE')]) {
                        sh '''
                            export KUBECONFIG=$KUBECONFIG_FILE
                            kubectl apply -f deployment.yaml --namespace=${K8S_NAMESPACE}
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes Cluster') {
    steps {
        script {
            // Set up kubectl to interact with your Kubernetes cluster
            sh '''
                export KUBEVERSION=$(kubectl version --client=true | grep "Client Version" | awk '{print $3}')
            '''
            withCredentials([
                file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG_FILE'),
                usernamePassword(
                    credentialsId: 'DockerHubCred', 
                    usernameVariable: 'DOCKER_USER', 
                    passwordVariable: 'DOCKER_PASS'
                )
            ]) {
                sh '''
                    export KUBECONFIG=$KUBECONFIG_FILE
                    # Apply Kubernetes deployment YAML file (commented out as an example)
                     kubectl set image deployment/${K8S_DEPLOYMENT_NAME} node-app:latest=${DOCKER_USER}/node-app:latest --namespace=${K8S_NAMESPACE}
                     kubectl rollout status deployment/${K8S_DEPLOYMENT_NAME} --namespace=${K8S_NAMESPACE}
                    #kubectl get all
                '''
            }
        }
    }
}

        
    }
    post {
        always {
            // Clean up the Docker images
            cleanWs()
        }
    }

}
